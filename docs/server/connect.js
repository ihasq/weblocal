"use strict";(()=>{function f(e){return new Promise((n,t)=>{e.oncomplete=e.onsuccess=()=>n(e.result),e.onabort=e.onerror=()=>t(e.error)})}function w(e,n){let t=indexedDB.open(e);t.onupgradeneeded=()=>t.result.createObjectStore(n);let a=f(t);return(i,u)=>a.then(r=>u(r.transaction(n,i).objectStore(n)))}var d;function m(){return d||(d=w("keyval-store","keyval")),d}function y(e,n,t=m()){return t("readwrite",a=>(a.put(n,e),f(a.transaction)))}(async()=>{e:{if(window==parent)break e;let{data:e}=await new Promise(r=>self.onmessage=r);if(!(e instanceof MessagePort))break e;console.log("port recieved");let n={},t=new BroadcastChannel("--weblocal-connection-signal"),a=new TextDecoder,{publicKey:i,privateKey:u}=await crypto.subtle.generateKey({name:"RSA-OAEP",modulusLength:4096,publicExponent:new Uint8Array([1,0,1]),hash:"SHA-512"},!1,["encrypt","decrypt"]);await y("--weblocal-connection-key",i),t.onmessage=async({data:r})=>{let s=a.decode(await crypto.subtle.decrypt({name:"RSA-OAEP"},u,r)),o=new BroadcastChannel(s),c={};n[s]={port:o,promises:c},o.onmessage=async({data:{code:p,id:l,data:g}})=>{switch(p){case"REQUEST":{e.postMessage({code:p,id:l,data:g}),o.postMessage({code:"RESPONSE",id:l,data:await new Promise(h=>c[l]=h)});break}}}},e.onmessage=async({data:{code:r,id:s,data:o,channel:c}})=>{switch(r){case"RESPONSE":{n[c]?.promises?.[s]?.(o);break}}},e.postMessage({code:"CONNECT"})}})();})();
