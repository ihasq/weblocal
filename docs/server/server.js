"use strict";(()=>{var n={},P=()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER),g=new Promise(e=>self.onmessage=e),b=async({request:e})=>{let a;for(;(a=P())in n;);let{body:s,cache:t,credentials:o,headers:i,integrity:d,keepalive:l,method:c,mode:m,redirect:h,referrer:p,referrerPolicy:E,url:T}=e,u=Object.fromEntries(i.entries());return console.log({body:s,cache:t,credentials:o,headers:i,integrity:d,keepalive:l,method:c,mode:m,redirect:h,referrer:p,referrerPolicy:E,url:T}),(await g).data.postMessage({code:"REQUEST",id:a,data:[s,t,o,u,d,l,c,m,h,p,E,T]}),await new Promise(r=>n[a]=r).then(([r,w,M,k])=>new Response(r,{headers:w,status:M,statusText:k}))},v=new BroadcastChannel(""),f=()=>setTimeout(()=>v.close(),3e3);g.then(({data:e})=>{let a=f();e.onmessage=({data:{code:s,id:t,data:o}})=>{switch(s){case"HEARTBEAT":{clearTimeout(a),a=f();break}default:console.log("ok",t),n[t]?.(o)}},e.postMessage({code:"CONNECT"})});self.addEventListener("fetch",e=>e.respondWith(b(e)));})();
